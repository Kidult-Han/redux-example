{"ast":null,"code":"import { createSlice, nanoid } from \"@reduxjs/toolkit\";\nconst initialState = [];\nconst todoSlice = createSlice({\n  name: \"todolist\",\n  initialState,\n  reducers: {\n    addlist(state, action) {\n      return state = state.push({\n        id: nanoid(),\n        date: action.payload.date,\n        time: action.payload.time,\n        cont: action.payload.cont\n      });\n    },\n    dellist: state => {\n      state.length = 0;\n    }\n  }\n});\nexport const {\n  addlist,\n  dellist\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","initialState","todoSlice","name","reducers","addlist","state","action","push","id","date","payload","time","cont","dellist","length","actions","reducer"],"sources":["/Users/jiaweipan/redux/src/redux/todoSlice.js"],"sourcesContent":["import { createSlice,nanoid } from \"@reduxjs/toolkit\"; \nconst initialState = []\nconst todoSlice=createSlice(\n    {\n        name:\"todolist\",\n        initialState,\n        reducers:{\n            addlist(state,action){\n               return state=state.push({\n                    id:nanoid(),\n                    date:action.payload.date,\n                    time:action.payload.time,\n                    cont:action.payload.cont\n                })\n            },\n            dellist:(state)=>{\n                state.length=0\n            }\n        }        \n    })\n\nexport const {addlist,dellist}= todoSlice.actions;\nexport default todoSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAACC,MAAM,QAAQ,kBAAkB;AACrD,MAAMC,YAAY,GAAG,EAAE;AACvB,MAAMC,SAAS,GAACH,WAAW,CACvB;EACII,IAAI,EAAC,UAAU;EACfF,YAAY;EACZG,QAAQ,EAAC;IACLC,OAAO,CAACC,KAAK,EAACC,MAAM,EAAC;MAClB,OAAOD,KAAK,GAACA,KAAK,CAACE,IAAI,CAAC;QACnBC,EAAE,EAACT,MAAM,EAAE;QACXU,IAAI,EAACH,MAAM,CAACI,OAAO,CAACD,IAAI;QACxBE,IAAI,EAACL,MAAM,CAACI,OAAO,CAACC,IAAI;QACxBC,IAAI,EAACN,MAAM,CAACI,OAAO,CAACE;MACxB,CAAC,CAAC;IACN,CAAC;IACDC,OAAO,EAAER,KAAK,IAAG;MACbA,KAAK,CAACS,MAAM,GAAC,CAAC;IAClB;EACJ;AACJ,CAAC,CAAC;AAEN,OAAO,MAAM;EAACV,OAAO;EAACS;AAAO,CAAC,GAAEZ,SAAS,CAACc,OAAO;AACjD,eAAed,SAAS,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}